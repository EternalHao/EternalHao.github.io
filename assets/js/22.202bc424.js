(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{141:function(t,a,_){"use strict";_.r(a);var s=_(0),v=Object(s.a)({},(function(){var t=this,a=t.$createElement,_=t._self._c||a;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("blockquote",[_("h4",{attrs:{id:"相信不少面试官喜欢问这个-几乎是问烂的"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#相信不少面试官喜欢问这个-几乎是问烂的"}},[t._v("#")]),t._v(" 相信不少面试官喜欢问这个,几乎是问烂的")])]),t._v(" "),_("p",[t._v("本教程就是教你如何占用面试官的时间,让面试官少问问题,尽量多说废话,多说自己知道的,这样你就不会被问住,你需要准备一个问题接着另一个问题,表现出好学的姿势")]),t._v(" "),_("h3",{attrs:{id:"_1-简单介绍一下索引"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-简单介绍一下索引"}},[t._v("#")]),t._v(" 1. 简单介绍一下索引")]),t._v(" "),_("p",[t._v("我们从下面三个点来回答这个问题:")]),t._v(" "),_("blockquote",[_("p",[t._v("1.什么是索引?")])]),t._v(" "),_("blockquote",[_("p",[t._v("首先介绍一下索引,索引是一种帮助MySQL高效查找数据的数据结构,我们用的数据库是MySQL,但是MySQL的存储引擎有MyISAM,InnoDB,通常我们使用的是InnoDB,这两个引擎的索引结构是不同的,下面我简单介绍一下InnoDB的索引,众所周知我们都希望查询数据尽可能的快,我们又知道索引在查找的过程中要产生磁盘的消耗,为了减少在查找过程中与磁盘的交互次数,数据库采用了B+树作为索引,此时你最好要求要画一下图(证明你了解它,重要的这个你练过,慢慢画不着急,体现出思考的过程,这个很重要)")])]),t._v(" "),_("blockquote",[_("p",[t._v("2.为什么要用索引?\n我们都知道数据库的数据最终是存在磁盘上的,我们在取数据的时候其实是与磁盘发生交互,为了减少我们在查询数据时与磁盘的交互次数,同时也要保证我们的查询数据的稳定性,我们采用了B+树作为索引,索引的结构组织要尽量减少查找过程中磁盘I/O的存取次数,降低系统消耗")])]),t._v(" "),_("p",[t._v("下面可能问你什么是B+树,为什么B+树稳定?\n"),_("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/5687393-f7686f5fd8dc3c43.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1152",alt:""}})]),t._v(" "),_("p",[t._v("下一个问题,面试官就让你介绍 一下 MyISAM 和 InnoDB区别,那么恭喜你赚到了, 你就可以巴巴啦. 恭喜你")]),t._v(" "),_("blockquote",[_("p",[t._v("MyISAM 是MySQL默认的存储引擎. 不支持事务、也不支持外健,其优势是访问数据快 -> InnoDB就提供了具有提交、回滚和崩溃能力的事务安全")])]),t._v(" "),_("h3",{attrs:{id:"_2-什么是b树、b-树、b-树、-索引为什么用这种数据结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-什么是b树、b-树、b-树、-索引为什么用这种数据结构"}},[t._v("#")]),t._v(" 2. 什么是B树、B-树、B+树、 索引为什么用这种数据结构")]),t._v(" "),_("blockquote",[_("p",[t._v("我先来介绍B树,B树是一种利用平衡树的优势加快查询的稳定性和速度的数据结构,数据都存储在叶子结点中，分支结点均为索引，查询时只需要扫描叶子节点，常用于数据库索引；")])]),t._v(" "),_("ol",[_("li",[_("p",[t._v("B树：二叉树，每个结点只存储一个关键字，等于则命中，小于走左结点，大于走右结点")])]),t._v(" "),_("li",[_("p",[t._v("B-树：多路搜索树，每个结点存储M/2到M个关键字，非叶子结点存储指向关键字范围的子结点；所有关键字在整颗树中出现，且只出现一次，非叶子结点可以命中；")])]),t._v(" "),_("li",[_("p",[t._v("B+树：在B-树基础上，为叶子结点增加链表指针，所有关键字都在叶子结点中出现，非叶子结点作为叶子结点的索引；B+树总是到叶子结点才命中；")])])]),t._v(" "),_("p",[t._v("B类树是平衡树，每个结点到叶子结点的高度都是相同，这也保证了每个查询是稳定的，查询的时间复杂度时log2(n)；这里利用平衡树的优势加快查询的稳定性和速度")]),t._v(" "),_("h3",{attrs:{id:"_3-索引失效的情况-你遇到过吗"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-索引失效的情况-你遇到过吗"}},[t._v("#")]),t._v(" 3. 索引失效的情况,你遇到过吗?")]),t._v(" "),_("p",[t._v("其实这个问题问的就是有索引,但是查询的时候用不到,当问到这个问题,你先不要急着回答,思考一段时间,自己把握,然后再把自己的答案告诉它")]),t._v(" "),_("blockquote",[_("p",[t._v("这个问题的核心就在与索引是用B+树实现的,就是那些情况下B+树会进行全文查找")])]),t._v(" "),_("ol",[_("li",[t._v("以%开头的LIKE的查询不能够利用B-TREE索引  推荐使用全文索引来解决类似的全文检索的问题")]),t._v(" "),_("li",[t._v("数据类型出现隐式转化的时候也不会用索引\n举个例子 字符串类型查找不加索引")]),t._v(" "),_("li",[t._v("复合索引的情况下,查询条件不包含索引列的最左边部分,不使用索引")]),t._v(" "),_("li",[t._v('使用索引比全表扫描更加慢,则不使用索引\n例如查询 开头为"S"的电影,需要返回的实际记录比例较大,就不走索引,直接全文检索')]),t._v(" "),_("li",[t._v("用or分割开的条件,如果or前的条件列有索引,而后面的列中没有索引")])]),t._v(" "),_("p",[t._v("上面的部分普通的面试已经足够,下面就是你的亮点,看自己发挥")]),t._v(" "),_("h3",{attrs:{id:"innodb的索引实现"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#innodb的索引实现"}},[t._v("#")]),t._v(" InnoDB的索引实现")]),t._v(" "),_("blockquote",[_("p",[t._v("我们日常使用的InnoDB存储引擎,InnoDB采用B+树最为自己的索引,索引种类分为聚集索引和辅助索引,高度平衡,叶子节点存放数据,其中我们知道MyISAM和InnoDB在索引方面的实现是不同的,对于MyISAM来说索引文件和数据文件是分开的,索引文件保存的数据地址,而InnoDB中,表数据文件就是按照B+tree组织的一个索引表,这个索引的Key就是表的主键,这个索引也被叫做聚集索引")])]),t._v(" "),_("h4",{attrs:{id:"聚集索引-按照表中的主键创建一颗b-树-同时叶子节点存放的就是整行记录-查询优化器倾向于采用聚集索引"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#聚集索引-按照表中的主键创建一颗b-树-同时叶子节点存放的就是整行记录-查询优化器倾向于采用聚集索引"}},[t._v("#")]),t._v(" 聚集索引: 按照表中的主键创建一颗B+树,同时叶子节点存放的就是整行记录,查询优化器倾向于采用聚集索引")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/5687393-f7686f5fd8dc3c43.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1152",alt:""}})]),t._v(" "),_("h4",{attrs:{id:"辅助索引-叶子节点并不包含行记录的全部数据"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#辅助索引-叶子节点并不包含行记录的全部数据"}},[t._v("#")]),t._v(" 辅助索引: 叶子节点并不包含行记录的全部数据,")]),t._v(" "),_("h4",{attrs:{id:"联合索引"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#联合索引"}},[t._v("#")]),t._v(" 联合索引")]),t._v(" "),_("p",[t._v("表上的多个列创建索引\n来一张图")]),t._v(" "),_("h4",{attrs:{id:"覆盖索引"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#覆盖索引"}},[t._v("#")]),t._v(" 覆盖索引")]),t._v(" "),_("p",[t._v("从辅助索引(主键索引)中就可查到记录,而不需要查询聚集索引的记录,减少IO交互")]),t._v(" "),_("h4",{attrs:{id:"https-www-cnblogs-com-tgycoder-p-5410057-html"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#https-www-cnblogs-com-tgycoder-p-5410057-html"}},[t._v("#")]),t._v(" https://www.cnblogs.com/tgycoder/p/5410057.html")])])}),[],!1,null,null,null);a.default=v.exports}}]);